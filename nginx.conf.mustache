# Configuration for the nginx proxy/server.
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    resolver 127.0.0.1 valid=30s;

    rewrite_log {{{rewrite_log}}};

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Deny access to proxies with misconfigured hosts
    server {
        listen       2368 default_server;
        listen       [::]:2368 default_server;
        server_name  "";
        return 444;
    }

    server {
        listen       2368;
        listen       [::]:2368;
        server_name  "{{{blog_server}}}";
        set $blog "{{{blog_host}}}";

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location ~ ^/ghost {
            # Require administration to originate from within gros VLAN
            return 403;
        }

        location ~ ^/ {
            proxy_pass http://$blog:2368;
        }
    }

    server {
        listen       2368;
        listen       [::]:2368;
        server_name  "{{{visualization_server}}}";
        set $jenkins "{{{jenkins_host}}}";
        root /srv/visualization-site/www;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location ^~ /login {
            return 403;
        }

        # Handle visualizations from Jenkins. The job name must start with
        # "build-" and the remainder is the name in the URL path. The job is
        # a multibranch pipeline job which generates an HTML report for the
        # master branch, using the publishHTML post build step from the HTML
        # Publisher plugin, with the name "Visualization" and an index page of
        # index.html.
        location ~ {{#path}}{{{visualization_url}}}{{/path}}({{#join}}{{#visualization_names}}{{{.}}}|{{/visualization_names}}{{/join}})(/|\.zip) {
            rewrite ^{{#path}}{{{visualization_url}}}{{/path}}([^/]+)\.zip$ /job/build-$1/job/master/Visualization/*zip*/$1.zip break;
            rewrite ^{{#path}}{{{visualization_url}}}{{/path}}([^/]+)/$ /job/build-$1/job/master/Visualization/index.html break;
            rewrite ^{{#path}}{{{visualization_url}}}{{/path}}([^/]+)/(.+) /job/build-$1/job/master/Visualization/$2 break;
            proxy_pass http://$jenkins:8080;
        }

        location ^~ /encrypt {
            rewrite ^/encrypt /auth/encrypt.py break;
            proxy_pass "https://127.0.0.1";
            proxy_ssl_verify off;
            add_header Access-Control-Allow-Origin *;
        }

        location ^~ /analytics {
            set_real_ip_from {{{proxy_range}}};
            real_ip_header X-Forwarded-For;
            real_ip_recursive on;
            {{#allow_range}}
            allow {{{.}}};
            {{/allow_range}}
            deny all;
            root /srv/goaccess-report;
            autoindex on;
            access_log /var/log/nginx/analytics_access.log;
        }

        rewrite ^/view {{#url}}{{{visualization_server}}}/{{{visualization_url}}}{{/url}} permanent;
        rewrite ^/job {{#url}}{{{visualization_server}}}/{{{visualization_url}}}{{/url}} permanent;
        rewrite ^{{#path}}{{{visualization_url}}}{{/path}}([_0-9a-zA-Z-]+)$ {{#url}}{{{visualization_server}}}/{{{visualization_url}}}{{/url}}$1/ permanent;

        proxy_intercept_errors on;

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location ~ {{#path}}{{{visualization_url}}}{{/path}}(manifest\.js|vendor\.js|navbar\.css|fonts/) {
            add_header Access-Control-Allow-Origin *;
            rewrite {{#path}}{{{visualization_url}}}{{/path}}(.+) /job/build-visualization-site/job/master/Visualization/$1 break;
            proxy_pass http://$jenkins:8080;
        }

        location ~ ^{{#path}}{{{visualization_url}}}{{/path}} {
            rewrite ^{{#path}}{{{visualization_url}}}{{/path}}(.+) /job/build-visualization-site/job/master/Visualization/$1 break;
            rewrite ^{{#path}}{{{visualization_url}}}{{/path}} /job/build-visualization-site/job/master/Visualization/index.html break;
            proxy_pass http://$jenkins:8080;
        }
    }

    server {
        listen       2368;
        listen       [::]:2368;
        server_name  {{{discussion_server}}};
        set $discourse "{{{discussion_host}}}";

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location ~ ^/admin {
            # Require administration to originate from within VLAN
            return 403;
        }

        location ~ ^/ {
            proxy_pass http://$discourse:3000;
        }
    }

    server {
        listen       2368;
        listen       [::]:2368;
        server_name  "{{{prediction_server}}}";
        set $jenkins "{{{jenkins_host}}}";
        set $owncloud "{{{files_host}}}";
        root         /srv/visualization-site/www;

        port_in_redirect off;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        # Handle prediction data from Jenkins.
        location ~ {{#path}}{{{prediction_url}}}{{/path}}(api/v1(-(?P<branch>[-_0-9a-zA-Z]+))?)/ {
            if ($branch = "") {
                set $branch "master";
            }
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}api/v1(-[-_0-9a-zA-Z]+)?/predict/jira/([-_0-9a-zA-Z]+)/sprint/(\d+|latest) /job/create-prediction/job/$branch/lastSuccessfulBuild/artifact/output/$2/$3.json break;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}api/v1(-[-_0-9a-zA-Z]+)?/list/jira /job/create-prediction/job/$branch/lastSuccessfulBuild/artifact/output/projects.json break;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}api/v1(-[-_0-9a-zA-Z]+)?/list/meta /job/create-prediction/job/$branch/lastSuccessfulBuild/artifact/output/projects_meta.json break;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}api/v1(-[-_0-9a-zA-Z]+)?/configuration /job/create-prediction/job/$branch/lastSuccessfulBuild/artifact/output/configuration.json break;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}api/v1(-[-_0-9a-zA-Z]+)?/locale/(descriptions|tags|units|short_units|sources) /job/create-prediction/job/$branch/lastSuccessfulBuild/artifact/output/$2.json break;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}api/v1(-[-_0-9a-zA-Z]+)?/links/([-_0-9a-zA-Z]+)/sprint/(latest) /job/create-prediction/job/$branch/lastSuccessfulBuild/artifact/output/$2/links.json break;
            proxy_pass http://$jenkins:8080;
            add_header Access-Control-Allow-Origin *;
        }

        location ~ {{#path}}{{{prediction_url}}}{{/path}}(show|branch/(?P<branch>[-_0-9a-zA-Z]+))/ {
            set $branch "master";
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}(show|branch/[-_0-9a-zA-Z]+)/zip$ /job/create-prediction/job/$branch/lastSuccessfulBuild/artifact/*zip*/archive.zip break;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}(show|branch/[-_0-9a-zA-Z]+)/([-_0-9a-zA-Z]+)/$ {{#url}}{{{prediction_server}}}/{{{prediction_url}}}{{/url}}$1/$2 permanent;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}(show|branch/[-_0-9a-zA-Z]+)/([-_0-9a-zA-Z]+)$ /job/build-prediction-site/job/$branch/Visualization/index.html?$2 break;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}(show|branch/[-_0-9a-zA-Z]+)/(.+) /job/build-prediction-site/job/$branch/Visualization/$2 break;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}(show|branch/[-_0-9a-zA-Z]+)/$ /job/build-prediction-site/job/$branch/Visualization/index.html break;
            proxy_pass http://$jenkins:8080;
        }

        location = {{#path}}{{{prediction_url}}}{{/path}}branches {
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}branches /job/create-prediction/api/json?tree=jobs[name,color] break;
            add_header Access-Control-Allow-Origin *;
            proxy_pass http://$jenkins:8080;
        }

        location ~ {{#path}}{{{prediction_url}}}{{/path}}papers/.*$ {
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}papers/(.*).pdf /index.php/s/YOUR_OWNCLOUD_SHARE_ID_HERE/download?path=%2F&files=$1.pdf break;
            proxy_hide_header Content-Disposition;
            proxy_intercept_errors on;
            proxy_pass http://$owncloud;
        }

        location ^~ {{#path}}{{{prediction_url}}}{{/path}}files {
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}files /index.php/apps/files_sharing/ajax/list.php?t=YOUR_OWNCLOUD_SHARE_ID_HERE&dir=%2F&sort=name&sortdirection=asc break;
            add_header Access-Control-Allow-Origin *;
            proxy_pass http://$owncloud;
        }

        autoindex off;
        rewrite ^{{#path}}{{{prediction_url}}}{{/path}}(index\.html|show|papers/?)?$ {{#url}}{{{prediction_server}}}/{{{prediction_url}}}{{/url}}show/ permanent;
        rewrite ^/zip$ {{#url}}{{{prediction_server}}}/{{{prediction_url}}}{{/url}}show/zip permanent;

        proxy_intercept_errors on;

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location ~ ^{{#path}}{{{prediction_url}}}{{/path}} {
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}}(.+) /job/build-visualization-site/job/master/Visualization/$1 break;
            rewrite ^{{#path}}{{{prediction_url}}}{{/path}} /job/build-visualization-site/job/master/Visualization/index.html break;
            proxy_pass http://$jenkins:8080;
        }
    }

    server {
        listen       3000;
        listen       [::]:3000;
        server_name  "{{{websocket_server}}}";

        location / {
            set_real_ip_from {{{proxy_range}}};
            real_ip_header X-Forwarded-For;
            real_ip_recursive on;
            {{#allow_range}}
            allow {{{.}}};
            {{/allow_range}}
            deny all;

            access_log /var/log/nginx/analytics_access.log;

            proxy_pass http://127.0.0.1:7890;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}
