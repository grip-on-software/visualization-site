# Configuration for the nginx proxy/server.
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    resolver 192.168.0.1 valid=30s;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Deny access to proxies with misconfigured hosts
    server {
        listen       2368 default_server;
        listen       [::]:2368 default_server;
        server_name  "";
        return 444;
    }

    server {
        listen       2368;
        listen       [::]:2368;
        server_name  blog.gros.example;
        set $backend "www.blog.gros.test";
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location ~ ^/ghost {
            # Require administration to originate from within gros VLAN
        }

        location ~ ^/ {
            proxy_pass http://$backend:2368;
        }

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

    server {
        listen       2368;
        listen       [::]:2368;
        server_name  visualization.gros.example;
        set $backend "www.jenkins.gros.test";
        root /srv/visualization-site/www;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location /login {
            return 403;
        }

        # Handle visualizations from Jenkins. The job name must start with
        # "create-" and the remainder is the name in the URL path. The job
        # generates an HTML report, using the Publish HTML reports post build
        # step from HTML Publisher plugin, with the name "Visualization" and
        # an index page of index.html.
        location ~ /(timeline|heatmap|collaboration-graph|leaderboard|bigboat-status)(/|\.zip) {
            rewrite ^/([^/]+)\.zip$ /job/create-$1/Visualization/*zip*/$1.zip break;
            rewrite ^/([^/]+)/$ /job/create-$1/Visualization/index.html break;
            rewrite ^/([^/]+)/(.+) /job/create-$1/Visualization/$2 break;
            proxy_pass http://$backend:8080;
        }

        location /encrypt {
            rewrite ^/encrypt /auth/encrypt.py break;
            proxy_pass https://localhost;
            proxy_ssl_verify off;
            add_header Access-Control-Allow-Origin *;
        }

        location /analytics {
            set_real_ip_from 192.168.0.0/24;
            real_ip_header X-Forwarded-For;
            real_ip_recursive on;
            allow 192.168.0.0/24;
            deny all;
            root /srv/goaccess-report;
            autoindex on;
            access_log /var/log/nginx/analytics_access.log;
        }

        rewrite ^/view http://visualization.gros.example/ permanent;
        rewrite ^/job http://visualization.gros.example/ permanent;
        rewrite ^/([_0-9a-zA-Z-]+)$ http://visualization.gros.example/$1/ permanent;

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

    server {
        listen       2368;
        listen       [::]:2368;
        server_name  discussion.gros.example;
        set $backend "www.discussion.gros.test";
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location ~ ^/admin {
            # Require administration to originate from within gros VLAN
        }

        location ~ ^/ {
            proxy_pass http://$backend:3000;
        }

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

    server {
        listen       2368;
        listen       [::]:2368;
        server_name  prediction.gros.example;
        set $backend "www.jenkins.gros.test";
        set $papers  "www.owncloud.gros.test";
        root         /srv/visualization-site/www;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        # Handle prediction data from Jenkins.
        location ~ /api/v1 {
            rewrite ^/api/v1/predict/jira/(\w+)/sprint/(\d+|latest) /job/create-prediction/lastSuccessfulBuild/artifact/output/$1/$2.json break;
            rewrite ^/api/v1/list/jira /job/create-prediction/lastSuccessfulBuild/artifact/output/projects.json break;
            proxy_pass http://$backend:8080;
            add_header Access-Control-Allow-Origin *;
        }

        location ~ /(show/.*|zip)$ {
            rewrite ^/zip$ /job/create-prediction/lastSuccessfulBuild/artifact/*zip*/archive.zip break;
            rewrite ^/show/([A-Z]+)/$ http://prediction.gros.example/show/$1 permanent;
            rewrite ^/show/([A-Z]+)$ /job/create-prediction-site/Visualization/index.html?$1 break;
            rewrite ^/show/(.+) /job/create-prediction-site/Visualization/$1 break;
            rewrite ^/(show/)?$ /job/create-prediction-site/Visualization/index.html break;
            proxy_pass http://$backend:8080;
        }

        location ~ /papers/.*$ {
            rewrite ^/papers/(.*).pdf /index.php/s/YOUR_OWNCLOUD_SHARE_ID_HERE/download?path=%2F&files=$1.pdf break;
            proxy_hide_header Content-Disposition;
            proxy_intercept_errors on;
            proxy_pass http://$papers;
        }

        autoindex off;
        location ~ /(index\.html)?$ {
            rewrite ^/.*$ http://prediction.gros.example/show/ permanent;
        }

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

    server {
        listen       3000;
        listen       [::]:3000;
        server_name  ws.gros.example;

        location / {
            set_real_ip_from 192.168.0.0/24;
            real_ip_header X-Forwarded-For;
            real_ip_recursive on;
            allow 192.168.0.0/24;
            deny all;

            access_log /var/log/nginx/analytics_access.log;

            proxy_pass http://127.0.0.1:7890;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}
