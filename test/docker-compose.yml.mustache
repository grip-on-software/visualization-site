# vim: set filetype=yaml :

nginx:
  image: bradjonesllc/nginx-dnsmasq:latest
  hostname: "{{{control_hostname}}}"
  domainname: "{{{control_domain}}}"
  dns: "{{{primary_dns}}}"
  volumes:
    - "../www:/srv/visualization-site/www"
    - "../nginx.conf:/etc/nginx/nginx.conf:ro"
    - "../nginx:/etc/nginx/nginx"
    - "{{{server_certificate}}}:{{{auth_cert}}}:ro"
  expose:
    - "2368"
    - "3000"
  links:
    - "jenkins:{{{jenkins_host}}}"
    - "jenkins:{{{blog_host}}}"
    - "jenkins:{{{discussion_host}}}"
    - "jenkins:{{{files_host}}}"

runner:
  image: python:3.6-alpine
  domainname: test
  command: "python -c 'import signal;signal.pause()'"
  volumes:
    - "../test:/work"
    - "../{{{config_file}}}:/config.json:ro"
    - "../visualization_names.txt:/visualization_names.txt:ro"
    - "../axe-core/:/axe-core"
  environment:
    - VISUALIZATION_ORGANIZATION
    - VISUALIZATION_COMBINED
  working_dir: "/work"
  links:
    - "selenium:selenium.test"
    - "coverage:coverage.test"

selenium:
  image: selenium/standalone-chrome:3.14.0
  domainname: test
  shm_size: "2g"
  expose:
    - "4444"
  links:
    - "blog:{{{blog_server}}}"
    - "discourse:{{{discussion_server}}}"
    - "www:{{{www_server}}}"
    - "visualization:{{{visualization_server}}}"
    - "prediction:{{{prediction_server}}}"
    - "ws:{{{websocket_server}}}"
  volumes:
    - "../test:/work"
  working_dir: "/work"

coverage:
  image: $DOCKER_REPOSITORY/gros-coverage-collector:latest
  domainname: test
  expose:
    - "8888"
  volumes:
    - "../{{{repo_root}}}:$PWD/test/repos"
    - "$PWD:$PWD"

jenkins:
  image: greyarch/caddy
  domainname: "{{{internal_domain}}}"
  expose:
    - "2368"
    - "3000"
    - "8080"
    - "80"
  environment:
      CONFIG: |
          :8080 {
              tls off
              errors stdout
              gzip
              root /srv/www
              mime .json application/json
              index htmlpublisher-wrapper.html
          }
          :2368 {
              tls off
              errors stdout
              gzip
              root /srv/blog
          }
          :3000 {
              tls off
              errors stdout
              gzip
              root /srv/discussion
          }
          :80 {
              tls off
              errors stdout
              root /srv/owncloud
              mime .php application/json
          }
  volumes:
    - "../www:/srv/www{{{jenkins_path}}}/job/build-visualization-site/job/master/Visualization"
    {{#visualization_organizations}}
    - "../www:/srv/www{{{jenkins_path}}}/job/build-visualization-site/job/{{{.}}}/Visualization"
    {{/visualization_organizations}}
    {{#groups}}
    {{#items}}
    {{#index}}
    - "../{{{repo_root}}}/{{{repo}}}/public:/srv/www{{{jenkins_path}}}/job/build-{{{repo}}}/job/master/Visualization"
    {{#visualization_organizations}}
    - "../{{{repo_root}}}/{{{repo}}}/public:/srv/www{{{jenkins_path}}}/job/build-{{{repo}}}/job/{{{.}}}/Visualization"
    {{/visualization_organizations}}
    {{/index}}
    {{/items}}
    {{/groups}}
    - "../test/sample/prediction-site/data:/srv/www{{{jenkins_path}}}/job/create-prediction/job/master/lastStableBuild/artifact/output"
    {{#prediction_organizations}}
    - "../{{{repo_root}}}/prediction-site/public:/srv/www{{{jenkins_path}}}/job/build-prediction-site/job/{{{prediction-site}}}/Visualization"
    - "../test/sample/prediction-site/data:/srv/www{{{jenkins_path}}}/job/create-prediction/job/{{{prediction-site}}}/lastStableBuild/artifact/output"
    - "../test/sample/prediction-site/data:/srv/www{{{jenkins_path}}}/job/create-prediction/job/{{{prediction-site}}}/lastStableBuild/artifact/output/{{{organization}}}"
    {{/prediction_organizations}}
    - "../test/sample/prediction-site/api:/srv/www/{{{jenkins_path}}}/job/create-prediction/api"
    - "../test/sample/blog:/srv/blog"
    - "../test/sample/discussion:/srv/discussion"
    - "../test/sample/owncloud:/srv/owncloud/index.php/apps/files_sharing/ajax"

{{#groups}}
{{#items}}
{{#index}}
{{{repo}}}:
  image: $DOCKER_REPOSITORY/gros-{{{repo}}}:latest
  domainname: "{{{internal_domain}}}"
  command: "/bin/sh -exc 'if [ -f .skip_build ]; then rm -rf public/data/ && cp -r /data public/data/ && echo Skipped build; else rm -rf public/* && cp -r /data public/data/ && rm -rf node_modules && ln -s /usr/src/app/node_modules . && MIX_FILE=$PWD/repos/{{{repo}}}/webpack.mix.js npm run pretest; fi'"
  user: "{{{user_id}}}:{{{group_id}}}"
  volumes:
    - "../{{{repo_root}}}:$PWD/repos"
    - "{{{branch_name}}}-{{{repo}}}-modules:/usr/src/app/node_modules"
    - "../test/sample/{{{repo}}}/data:/data"
  environment:
    - VISUALIZATION_ORGANIZATION
    - VISUALIZATION_COMBINED
  working_dir: "$PWD/repos/{{{repo}}}"
  expose:
    - "3000"
{{/index}}
{{/items}}
{{/groups}}

blog:
  domainname: "{{{domain}}}"
  environment:
    - GODEBUG=netdns=cgo
  links:
    - "nginx:{{{control_host}}}"

discourse:
  domainname: "{{{domain}}}"
  environment:
    - GODEBUG=netdns=cgo
  links:
    - "nginx:{{{control_host}}}"

www:
  domainname: "{{{domain}}}"
  environment:
    - GODEBUG=netdns=cgo
  links:
    - "nginx:{{{control_host}}}"

visualization:
  domainname: "{{{domain}}}"
  environment:
    - GODEBUG=netdns=cgo
  links:
    - "nginx:{{{control_host}}}"

prediction:
  domainname: "{{{domain}}}"
  environment:
    - GODEBUG=netdns=cgo
  links:
    - "nginx:{{{control_host}}}"

ws:
  domainname: "{{{domain}}}"
  environment:
    - GODEBUG=netdns=cgo
  links:
    - "nginx:{{{control_host}}}"
